# escape=`
FROM mcr.microsoft.com/windows/servercore:1809 as download
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]
ENV DOCKER_VERSION 18.09.1

RUN Invoke-WebRequest 'http://constexpr.org/innoextract/files/innoextract-1.6-windows.zip' -OutFile 'innoextract.zip' -UseBasicParsing ; `
    Expand-Archive innoextract.zip -DestinationPath C:\ ; `
    Remove-Item -Path innoextract.zip
RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 ; `
    Invoke-WebRequest $('https://github.com/docker/toolbox/releases/download/v{0}/DockerToolbox-{0}.exe' -f $env:DOCKER_VERSION) -OutFile 'dockertoolbox.exe' -UseBasicParsing
RUN /innoextract.exe dockertoolbox.exe

FROM golang:1.19.0-windowsservercore-1809 as go-image
ENV GOOS=windows
ENV GOARCH=amd64
ENV CGO_ENABLED=0
ENV GO111MODULE=on
RUN go install github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login@latest
RUN git clone --depth=1 --branch=v20.12.0 https://github.com/drone-plugins/drone-docker
RUN cd drone-docker; go build -v -a -tags netgo -o release/drone-docker.exe ./cmd/drone-docker

FROM mcr.microsoft.com/windows/nanoserver:1809
USER ContainerAdministrator
COPY --from=go-image c:\go\bin\docker-credential-ecr-login.exe C:/bin/docker-credential-ecr-login.exe
COPY --from=go-image c:\go\drone-docker\release\drone-docker.exe C:\bin\drone-docker.exe
COPY --from=download /windows/system32/netapi32.dll /windows/system32/netapi32.dll
COPY --from=download /app/docker.exe C:/bin/docker.exe
COPY ../config.json c:\Users\ContainerAdministrator\.docker\config.json
#ENV DOCKER_HOST=\\.pipe\\docker_engine
ENV METHOD=get
ENV AWS_ECR_DISABLE_CACHE=True
ENTRYPOINT [ "C:\\bin\\drone-docker.exe" ]
